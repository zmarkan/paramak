# Python CircleCI 2.0 configuration file
##
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2.1

executors:
  paramak:
    docker:
      - image: ghcr.io/fusion-energy/paramak:dependencies
    resource_class: medium
commands:
  install: 
    steps:
      - run: 
          name: Install
          command: |
            python setup.py install
  codecov-upload: 
    steps:
      - run:
          name: Codecov upload
          command: bash <(curl -s https://codecov.io/bash)


jobs:

  # Tests: Utils, Shape, Reactor, Parametric Shapes
  quick-tests:
    executor: paramak
    steps:
      - checkout
      - install
      - run:
          name: run utils tests
          command: 
            pytest tests/test_utils.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run shape tests
          command:
            pytest tests/test_shape.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run Reactor tests
          command:
            pytest tests/test_reactor.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_shapes tests
          command:
            pytest tests/test_parametric_shapes/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - codecov-upload
    
  # Tests: Parametric components
  parametric-components-tests:
    executor: paramak
    parallelism: 2
    steps: 
      - checkout
      - install
      - run:
          name: run parametric_components tests
          command: |
            set -e
            TEST_FILES=$(circleci tests glob "tests/test_parametric_components/**/*.py" | circleci tests split)
            pytest -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml $TEST_FILES
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - codecov-upload 


  # Tests: Parametric reactors
  parametric-reactors-tests:
    executor: paramak
    parallelism: 6
    steps: 
      - checkout
      - install
      - run:
          name: run parametric_reactors tests
          command: |
            set -e
            TEST_FILES=$(circleci tests glob "tests/test_parametric_reactors/**/*.py" | circleci tests split)
            pytest -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml $TEST_FILES
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - codecov-upload 

  # test:
  build:
    docker:
      - image: ghcr.io/fusion-energy/paramak:dependencies
    steps:
      - checkout
      - run:
          name: install
          command: |
            python setup.py install

      - run:
          name: run utils tests
          command: 
            pytest tests/test_utils.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run shape tests
          command:
            pytest tests/test_shape.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run Reactor tests
          command:
            pytest tests/test_reactor.py -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_shapes tests
          command:
            pytest tests/test_parametric_shapes/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_components tests
          command:
            pytest tests/test_parametric_components/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - run:
          name: run parametric_reactors tests
          command:
            pytest tests/test_parametric_reactors/ -v --cov=paramak --cov-append --cov-report term --cov-report xml --junitxml=test-reports/junit.xml

      - store_test_results:
          path: test-reports

      - codecov-upload

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - quick-tests
      - parametric-components-tests
      - parametric-reactors-tests
      
      # - build
      
      # - test
      # - build-deploy-master:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
      # - build-deploy-dev:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: develop
